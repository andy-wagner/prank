/**
 * Copyright 2012 David Millett
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 *  limitations under the License.
 */
apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'findbugs'
apply plugin: 'maven'
apply plugin: 'signing'

group = 'com.github.dmillett'
archivesBaseName = 'prank'
version = '1.1.0'

task prankJar(type: Jar)

task prankSourcesJar(type: Jar) {
  classifier = 'sources'
  from sourceSets.main.allSource
}

artifacts {
  archives prankJar
  archives prankSourcesJar
}

task javadocJar(type: Jar) {
  classifier = 'javadoc'
  from javadoc
}

task wrapper(type: Wrapper) {
  gradleVersion = '2.9'
}

repositories {
  mavenCentral()
}

dependencies {
  compile group: 'org.slf4j', name: 'slf4j-log4j12', version: '1.7.13'

  testCompile group: 'junit', name: 'junit', version: '4.11'
  testCompile group: 'org.mockito', name: 'mockito-all', version: '1.9.5'
}

tasks.withType(FindBugs) {
  reports {
    xml.enabled = false
    html.enabled = true
  }
}

signing {
  sign configurations.archives
}

uploadArchives {
  repositories {
    mavenDeployer {
      beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

      repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
        authentication(userName: ossrhUsername, password: ossrhPassword)
      }

      snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
        authentication(userName: ossrhUsername, password: ossrhPassword)
      }

      pom.project {
        name 'prank'
        packaging 'jar'
        // optionally artifactId can be defined here
        description 'A Java parallel ranking/scoring library.'
        url 'https://github.com/dmillett/prank'

        scm {
          connection 'https://github.com/dmillett/prank.git'
          developerConnection 'https://github.com/dmillett/prank.git'
          url 'https://github.com/dmillett/prank'
        }

        licenses {
          license {
            name 'The Apache License, Version 2.0'
            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
          }
        }

        developers {
          developer {
            id 'dmillett'
            name 'dmillett'
            email 'd_millett@hotmail.com'
          }
        }
      }
    }
  }
}

